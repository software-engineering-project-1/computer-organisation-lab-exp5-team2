/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Interface.java
 *
 * Created on Dec 11, 2010, 11:54:53 PM
 */

package mipsparser_new;

/**
 *
 * @author Lakshya
 */
import javax.swing.*;
import java.awt.event.*;
import java.awt.*;
import javax.swing.border.*;
import javax.swing.table.*;
import javax.swing.event.*;
import javax.swing.text.Element;
import java.io.*;
import java.util.*;
import javax.activation.FileDataSource;
import javax.swing.undo.*;
import mipsparser_new.BMSFS.*;
public class Interface extends javax.swing.JApplet {

    /** Initializes the applet Interface */
    MIPSProgram mipssimulator;
    boolean once_assemble=false;
    final String Projectname = "MipsParser";
    final double version = 1.0;
    UndoManager undoManager = new UndoManager();
    Integer no_files=0;
    Integer nameoffset = 1;
    FileDialog fc;
    javax.swing.JTable mainTable, dataTable;
    static final int maxtabs = 20;
    String filepath[] = new String[maxtabs];
    javax.swing.JPanel tempanel[] = new javax.swing.JPanel[maxtabs];
    javax.swing.JTextPane tempTextPane[] = new javax.swing.JTextPane[maxtabs];
    javax.swing.JScrollPane tempScrollPane[] = new javax.swing.JScrollPane[maxtabs];
    
    public void init() {
        for(int i=0;i<20;i++){
            filepath[i] = "";
        }
        try {
            //UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Main = new javax.swing.JPanel();
        mainTabbedPane = new javax.swing.JTabbedPane();
        editorPanel = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        executePanel = new javax.swing.JPanel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        helpPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        helpPane = new javax.swing.JTextPane();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        ioClear = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        ioPane = new javax.swing.JTextPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        msgPane = new javax.swing.JTextPane();
        msgClear = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mNew = new javax.swing.JMenuItem();
        mOpen = new javax.swing.JMenuItem();
        mClose = new javax.swing.JMenuItem();
        mCloseAll = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mSave = new javax.swing.JMenuItem();
        mSaveAs = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        Exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mUndo = new javax.swing.JMenuItem();
        mRedo = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mCut = new javax.swing.JMenuItem();
        mCopy = new javax.swing.JMenuItem();
        mPaste = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        mSelectAll = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        mAssemble = new javax.swing.JMenuItem();
        mRun = new javax.swing.JMenuItem();
        mStep = new javax.swing.JMenuItem();
        mReset = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        clearbp = new javax.swing.JMenuItem();
        togglebp = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();

        setFont(new java.awt.Font("Tahoma", 0, 12));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        Main.setBackground(new java.awt.Color(204, 204, 204));
        Main.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        Main.setFont(new java.awt.Font("Tahoma", 0, 12));
        Main.setMinimumSize(new java.awt.Dimension(400, 400));
        Main.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MainKeyPressed(evt);
            }
        });

        mainTabbedPane.setBackground(new java.awt.Color(204, 204, 204));
        mainTabbedPane.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(102, 102, 102)));
        mainTabbedPane.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mainTabbedPane.setFont(new java.awt.Font("Segoe UI", 0, 13));
        mainTabbedPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mainTabbedPaneFocusGained(evt);
            }
        });

        editorPanel.setBackground(new java.awt.Color(204, 204, 204));
        editorPanel.setFocusable(false);
        editorPanel.setFont(new java.awt.Font("Tahoma", 0, 12));
        editorPanel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                editorPanelFocusGained(evt);
            }
        });

        jTabbedPane2.setBackground(new java.awt.Color(204, 204, 204));
        jTabbedPane2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 2, 0, 0, new java.awt.Color(204, 204, 204)));
        jTabbedPane2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 12));

        javax.swing.GroupLayout editorPanelLayout = new javax.swing.GroupLayout(editorPanel);
        editorPanel.setLayout(editorPanelLayout);
        editorPanelLayout.setHorizontalGroup(
            editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
        );
        editorPanelLayout.setVerticalGroup(
            editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
        );

        mainTabbedPane.addTab(" Editor  ", editorPanel);

        executePanel.setBackground(new java.awt.Color(255, 255, 255));
        executePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jInternalFrame1.setTitle("Text Segment");
        jInternalFrame1.setFont(new java.awt.Font("Tahoma", 0, 12));
        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 497, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 186, Short.MAX_VALUE)
        );

        jInternalFrame2.setTitle("Data Segment");
        jInternalFrame2.setFont(new java.awt.Font("Tahoma", 0, 12));
        jInternalFrame2.setVisible(true);

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 497, Short.MAX_VALUE)
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 79, Short.MAX_VALUE)
        );

        jTabbedPane4.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane4.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane4.setFont(new java.awt.Font("Tahoma", 1, 12));

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"$zero", new Integer(0), new Integer(0)},
                {"$at", new Integer(1), new Integer(0)},
                {"$v0", new Integer(2), new Integer(0)},
                {"$v1", new Integer(3), new Integer(0)},
                {"$a0", new Integer(4), new Integer(0)},
                {"$a1", new Integer(5), new Integer(0)},
                {"$a2", new Integer(6), new Integer(0)},
                {"$a3", new Integer(7), new Integer(0)},
                {"$t0", new Integer(8), new Integer(0)},
                {"$t1", new Integer(9), new Integer(0)},
                {"$t2", new Integer(10), new Integer(0)},
                {"$t3", new Integer(11), new Integer(0)},
                {"$t4", new Integer(12), new Integer(0)},
                {"$t5", new Integer(13), new Integer(0)},
                {"$t6", new Integer(14), new Integer(0)},
                {"$t7", new Integer(15), new Integer(0)},
                {"$s0", new Integer(16), new Integer(0)},
                {"$s1", new Integer(17), new Integer(0)},
                {"$s2", new Integer(18), new Integer(0)},
                {"$s3", new Integer(19), new Integer(0)},
                {"$s4", new Integer(20), new Integer(0)},
                {"$s5", new Integer(21), new Integer(0)},
                {"$s6", new Integer(22), new Integer(0)},
                {"$s7", new Integer(23), new Integer(0)},
                {"$t8", new Integer(24), new Integer(0)},
                {"$t9", new Integer(25), new Integer(0)},
                {"$k0", new Integer(26), new Integer(0)},
                {"$k1", new Integer(27), new Integer(0)},
                {"$gp", new Integer(28), new Integer(0)},
                {"$sp", new Integer(29), new Integer(0)},
                {"$fp", new Integer(30), new Integer(0)},
                {"$ra", new Integer(31), new Integer(0)},
                {"$hi", new Integer(32), new Integer(0)},
                {"$lo", new Integer(33), new Integer(0)},
                {"$pc", new Integer(34), new Integer(0)}
            },
            new String [] {
                "Name", "Number", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(30);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(20);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(60);
        jTable1.getModel().addTableModelListener(new TableModelListener() {
            int counter =0;
            public void tableChanged(TableModelEvent e) {
                counter++;
                int row = e.getFirstRow();
                int column = e.getColumn();
                TableModel model = (TableModel)e.getSource();
                String columnName = model.getColumnName(column);
                Object data = model.getValueAt(row, column);
                Register.updateRegister(row, Integer.parseInt(data.toString()));
            }
        });

        jTabbedPane4.addTab("Registers   ", jScrollPane2);

        javax.swing.GroupLayout executePanelLayout = new javax.swing.GroupLayout(executePanel);
        executePanel.setLayout(executePanelLayout);
        executePanelLayout.setHorizontalGroup(
            executePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, executePanelLayout.createSequentialGroup()
                .addGroup(executePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jInternalFrame2)
                    .addComponent(jInternalFrame1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        executePanelLayout.setVerticalGroup(
            executePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(executePanelLayout.createSequentialGroup()
                .addComponent(jInternalFrame1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jInternalFrame2))
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
        );

        mainTabbedPane.addTab(" Execute  ", executePanel);

        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 774, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 329, Short.MAX_VALUE)
        );

        mainTabbedPane.addTab(" Codes   ", jPanel3);

        helpPane.setBorder(null);
        helpPane.setContentType("text/html");
        helpPane.setEditable(false);
        helpPane.setFont(new java.awt.Font("Tahoma", 0, 12));
        helpPane.setText("<html>\r   <head>\r \r   </head>\r   <body>\r<h2><u>User's Guide</u></h2> <br><p style=\"margin-top: 0\">\r 1. Help Content .....     \r     </p>\r   </body>\r </html>\r ");
        helpPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(helpPane);

        javax.swing.GroupLayout helpPanelLayout = new javax.swing.GroupLayout(helpPanel);
        helpPanel.setLayout(helpPanelLayout);
        helpPanelLayout.setHorizontalGroup(
            helpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
        );
        helpPanelLayout.setVerticalGroup(
            helpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
        );

        mainTabbedPane.addTab(" Help   ", helpPanel);

        jTabbedPane3.setBackground(new java.awt.Color(204, 204, 204));
        jTabbedPane3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 4, 2, 4, new java.awt.Color(204, 204, 204)));
        jTabbedPane3.setFont(new java.awt.Font("Segoe UI", 0, 13));

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel6.setAlignmentY(0.0F);

        ioClear.setFont(new java.awt.Font("Tahoma", 0, 14));
        ioClear.setText("Clear");
        ioClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ioClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ioClearActionPerformed(evt);
            }
        });

        ioPane.setEditable(false);
        ioPane.setFont(new java.awt.Font("Tahoma", 0, 12));
        jScrollPane4.setViewportView(ioPane);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ioClear)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(ioClear)
                .addContainerGap(35, Short.MAX_VALUE))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab(" Run Input/Output    ", jPanel6);

        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        msgPane.setEditable(false);
        msgPane.setFont(new java.awt.Font("Tahoma", 0, 12));
        jScrollPane3.setViewportView(msgPane);

        msgClear.setFont(new java.awt.Font("Tahoma", 0, 14));
        msgClear.setText("Clear");
        msgClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        msgClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msgClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(msgClear)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(msgClear)
                .addContainerGap(35, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab(" Parser Messages     ", jPanel5);

        javax.swing.GroupLayout MainLayout = new javax.swing.GroupLayout(Main);
        Main.setLayout(MainLayout);
        MainLayout.setHorizontalGroup(
            MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 779, Short.MAX_VALUE)
            .addComponent(jTabbedPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 779, Short.MAX_VALUE)
        );
        MainLayout.setVerticalGroup(
            MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(mainTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jMenuBar1.setFont(new java.awt.Font("Tahoma", 0, 12));

        jMenu1.setText("File");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 1, 12));

        mNew.setFont(new java.awt.Font("Segoe UI", 1, 12));
        mNew.setText("New");
        mNew.setMargin(new java.awt.Insets(3, 0, 0, 25));
        mNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mNewActionPerformed(evt);
            }
        });
        jMenu1.add(mNew);

        mOpen.setFont(new java.awt.Font("Segoe UI", 1, 12));
        mOpen.setText("Open");
        mOpen.setMargin(new java.awt.Insets(3, 0, 0, 25));
        mOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mOpenActionPerformed(evt);
            }
        });
        jMenu1.add(mOpen);

        mClose.setFont(new java.awt.Font("Segoe UI", 1, 12));
        mClose.setText("Close");
        mClose.setMargin(new java.awt.Insets(3, 0, 0, 25));
        mClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mCloseActionPerformed(evt);
            }
        });
        mClose.setEnabled(false);
        jMenu1.add(mClose);

        mCloseAll.setFont(new java.awt.Font("Segoe UI", 1, 12));
        mCloseAll.setText("Close All");
        mCloseAll.setMargin(new java.awt.Insets(3, 0, 0, 25));
        mCloseAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mCloseAllActionPerformed(evt);
            }
        });
        mCloseAll.setEnabled(false);
        jMenu1.add(mCloseAll);
        jMenu1.add(jSeparator1);

        mSave.setFont(new java.awt.Font("Segoe UI", 1, 12));
        mSave.setText("Save");
        mSave.setMargin(new java.awt.Insets(3, 0, 0, 25));
        mSave.setEnabled(false);
        mSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSaveActionPerformed(evt);
            }
        });
        jMenu1.add(mSave);

        mSaveAs.setFont(new java.awt.Font("Segoe UI", 1, 12));
        mSaveAs.setText("Save As");
        mSaveAs.setMargin(new java.awt.Insets(3, 0, 0, 25));
        mSaveAs.setEnabled(false);
        mSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSaveAsActionPerformed(evt);
            }
        });
        jMenu1.add(mSaveAs);
        jMenu1.add(jSeparator2);

        Exit.setFont(new java.awt.Font("Segoe UI", 1, 12));
        Exit.setText("Exit");
        Exit.setMargin(new java.awt.Insets(3, 0, 0, 25));
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenu1.add(Exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenu2.setFont(new java.awt.Font("Segoe UI", 1, 12));

        mUndo.setFont(new java.awt.Font("Segoe UI", 1, 12));
        mUndo.setText("Undo");
        mUndo.setMargin(new java.awt.Insets(3, 0, 0, 25));
        mUndo.setEnabled(false);
        mUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mUndoActionPerformed(evt);
            }
        });
        jMenu2.add(mUndo);

        mRedo.setFont(new java.awt.Font("Segoe UI", 1, 12));
        mRedo.setText("Redo");
        mRedo.setMargin(new java.awt.Insets(3, 0, 0, 25));
        mRedo.setEnabled(false);
        mRedo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mRedoActionPerformed(evt);
            }
        });
        jMenu2.add(mRedo);
        jMenu2.add(jSeparator3);

        mCut.setFont(new java.awt.Font("Segoe UI", 1, 12));
        mCut.setText("Cut");
        mCut.setMargin(new java.awt.Insets(3, 0, 0, 25));
        mCut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mCutActionPerformed(evt);
            }
        });
        mCut.setEnabled(false);
        jMenu2.add(mCut);

        mCopy.setFont(new java.awt.Font("Segoe UI", 1, 12));
        mCopy.setText("Copy");
        mCopy.setMargin(new java.awt.Insets(3, 0, 0, 25));
        mCopy.setEnabled(false);
        mCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mCopyActionPerformed(evt);
            }
        });
        jMenu2.add(mCopy);

        mPaste.setFont(new java.awt.Font("Segoe UI", 1, 12));
        mPaste.setText("Paste");
        mPaste.setMargin(new java.awt.Insets(3, 0, 0, 25));
        mPaste.setEnabled(false);
        mPaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mPasteActionPerformed(evt);
            }
        });
        jMenu2.add(mPaste);
        jMenu2.add(jSeparator4);

        mSelectAll.setFont(new java.awt.Font("Segoe UI", 1, 12));
        mSelectAll.setText("Select All");
        mSelectAll.setMargin(new java.awt.Insets(3, 0, 0, 25));
        mSelectAll.setEnabled(false);
        mSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSelectAllActionPerformed(evt);
            }
        });
        jMenu2.add(mSelectAll);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Run");
        jMenu3.setFont(new java.awt.Font("Segoe UI", 1, 12));

        mAssemble.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mAssemble.setText("Assemble");
        mAssemble.setMargin(new java.awt.Insets(3, 0, 0, 15));
        mAssemble.setEnabled(false);
        mAssemble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAssembleActionPerformed(evt);
            }
        });
        jMenu3.add(mAssemble);

        mRun.setFont(new java.awt.Font("Segoe UI", 1, 12));
        mRun.setText("Run");
        mRun.setMargin(new java.awt.Insets(3, 0, 0, 15));
        mRun.setEnabled(false);
        mRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mRunActionPerformed(evt);
            }
        });
        jMenu3.add(mRun);

        mStep.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mStep.setText("Step");
        mStep.setMargin(new java.awt.Insets(3, 0, 0, 15));
        mStep.setEnabled(false);
        mStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mStepActionPerformed(evt);
            }
        });
        jMenu3.add(mStep);

        mReset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mReset.setText("Reset");
        mReset.setMargin(new java.awt.Insets(3, 0, 0, 15));
        mReset.setEnabled(false);
        mReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mResetActionPerformed(evt);
            }
        });
        jMenu3.add(mReset);
        jMenu3.add(jSeparator5);

        clearbp.setFont(new java.awt.Font("Segoe UI", 1, 12));
        clearbp.setText("Clear BreakPoints");
        clearbp.setMargin(new java.awt.Insets(3, 0, 0, 15));
        clearbp.setEnabled(false);
        clearbp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbpActionPerformed(evt);
            }
        });
        jMenu3.add(clearbp);

        togglebp.setFont(new java.awt.Font("Segoe UI", 1, 12));
        togglebp.setText("Toggle Breakpoints");
        togglebp.setMargin(new java.awt.Insets(3, 0, 0, 15));
        togglebp.setEnabled(false);
        togglebp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                togglebpActionPerformed(evt);
            }
        });
        jMenu3.add(togglebp);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Help");
        jMenu4.setFont(new java.awt.Font("Segoe UI", 1, 12));

        jMenuItem1.setFont(new java.awt.Font("Segoe UI", 1, 12));
        jMenuItem1.setLabel(" Help      ");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);
        jMenu4.add(jSeparator6);

        jMenuItem2.setFont(new java.awt.Font("Segoe UI", 1, 12));
        jMenuItem2.setLabel(" About      ");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem2);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents



    private void mCutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mCutActionPerformed
        // TODO add your handling code here:
        if(mainTabbedPane.getSelectedIndex()!=0)
            return;

        int index = jTabbedPane2.getSelectedIndex();
        tempTextPane[index].cut();
    }//GEN-LAST:event_mCutActionPerformed
    void addMaintab(String name){
            if(no_files == 0){
                menu1v(true);
            }
            filepath[no_files] = "";
            tempTextPane[no_files] = new javax.swing.JTextPane();
            tempTextPane[no_files].getDocument().addUndoableEditListener(
                new UndoableEditListener() {
                public void undoableEditHappened(UndoableEditEvent e) {
                undoManager.addEdit(e.getEdit());
                }
            });

            tempScrollPane[no_files] = new javax.swing.JScrollPane();
            tempScrollPane[no_files].setViewportView(tempTextPane[no_files]);
            tempanel[no_files] = new javax.swing.JPanel();
            tempanel[no_files].setBorder(javax.swing.BorderFactory.createEtchedBorder());

            javax.swing.GroupLayout tempLayout = new javax.swing.GroupLayout(tempanel[no_files]);
            tempanel[no_files].setLayout(tempLayout);
            tempLayout.setHorizontalGroup(
                tempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 754, Short.MAX_VALUE)
                .addGroup(tempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(tempScrollPane[no_files], javax.swing.GroupLayout.DEFAULT_SIZE, 754, Short.MAX_VALUE))
            );
            tempLayout.setVerticalGroup(
                tempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 391, Short.MAX_VALUE)
                .addGroup(tempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(tempScrollPane[no_files], javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE))
            );
            if(name.equals("")){
                jTabbedPane2.addTab("mips" + nameoffset + ".asm", tempanel[no_files]);
                jTabbedPane2.setFont(new java.awt.Font("Tahoma", 0, 12));
                nameoffset += 1;
            }
            else
                jTabbedPane2.addTab(name, tempanel[no_files]);
            jTabbedPane2.setSelectedIndex(no_files);
            tempTextPane[no_files].requestFocus();
            no_files = no_files + 1;
    }
    void menu1v(Boolean a){
        mClose.setEnabled(a);
        mCloseAll.setEnabled(a);
        mSave.setEnabled(a);
        mSaveAs.setEnabled(a);
        mUndo.setEnabled(a);
        mRedo.setEnabled(a);
        mCut.setEnabled(a);
        mCopy.setEnabled(a);
        mPaste.setEnabled(a);
        mSelectAll.setEnabled(a);
        mAssemble.setEnabled(a);
    }
    private void mNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mNewActionPerformed
        // TODO add your handling code here:
        mainTabbedPane.setSelectedComponent(editorPanel);
        if(no_files<maxtabs){
            addMaintab("");
        }
    }//GEN-LAST:event_mNewActionPerformed

    private void mCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mCloseActionPerformed
        // TODO add your handling code here:
        mainTabbedPane.setSelectedComponent(editorPanel);
        int index = jTabbedPane2.getSelectedIndex();
        if(index == -1)
            return;
        jTabbedPane2.remove(index);
        no_files = no_files - 1;
        if(no_files == 0){
            menu1v(false);
        }
    }//GEN-LAST:event_mCloseActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
        Main.removeAll();
        System.exit(1);
    }//GEN-LAST:event_ExitActionPerformed

    private void mCloseAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mCloseAllActionPerformed
        // TODO add your handling code here:
        mainTabbedPane.setSelectedComponent(editorPanel);
        no_files=0;
        menu1v(false);
        while(true){
            int index = jTabbedPane2.getSelectedIndex();
            if(index == -1)
               return;
            jTabbedPane2.remove(index);
        }
    }//GEN-LAST:event_mCloseAllActionPerformed

    private void mOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mOpenActionPerformed
        // TODO add your handling code here:
        mainTabbedPane.setSelectedComponent(editorPanel);
        String content = "";
        //java.io.FilePermission fperm = new java.io.FilePermission("C:\\", "read");
        fc = new FileDialog(new Frame(), "Open", FileDialog.LOAD);
        fc.setVisible(true);
        String File = fc.getFile();
        if(File==null)
            return;
        File file = new File(fc.getDirectory()+fc.getFile());
        try{
                Scanner sr = new Scanner(file);
                while(sr.hasNextLine()){
                    if(content.length()>0)
                        content+="\n";
                    content+=sr.nextLine();
                }
                sr.close();
            }
            catch(Exception e){
                javax.swing.JOptionPane jOptionPane1;
                jOptionPane1 = new javax.swing.JOptionPane();
                String message = e.getMessage();
                jOptionPane1.showMessageDialog(null, message);
;
            }
        if(no_files<maxtabs){
                addMaintab(fc.getFile());
                int index = jTabbedPane2.getSelectedIndex();
                tempTextPane[index].setText(content);
                filepath[index] = fc.getDirectory()+fc.getFile();
            }
        
    }//GEN-LAST:event_mOpenActionPerformed

    private void mSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSaveAsActionPerformed
        // TODO add your handling code here:
        int index = jTabbedPane2.getSelectedIndex();
        if(index == -1)
            return;
        String content = tempTextPane[index].getText();
        fc = new FileDialog(new Frame(), "Save As", FileDialog.SAVE);
        fc.setVisible(true);
        String file = fc.getFile();
        if(file==null)
            return;
        String filep = fc.getDirectory()+fc.getFile();
        try{
            BufferedWriter writer = new BufferedWriter(new FileWriter(filep));
            writer.write(content);
            writer.close();
            jTabbedPane2.setTitleAt(index, file);
            filepath[index] = filep;
        }
        catch(Exception e){
                ;
        }
    }//GEN-LAST:event_mSaveAsActionPerformed

    private void mSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSaveActionPerformed
        // TODO add your handling code here:
        int index = jTabbedPane2.getSelectedIndex();
        if(index == -1)
            return;
        String content = tempTextPane[index].getText();
        if(filepath[index].equals("")){
            fc = new FileDialog(new Frame(), "Save", FileDialog.SAVE);
            fc.setVisible(true);
            String file = fc.getFile();
            if(file==null)
                return;
            String filep = fc.getDirectory()+fc.getFile();
            try{
                BufferedWriter writer = new BufferedWriter(new FileWriter(filep));
                writer.write(content);
                writer.close();
                jTabbedPane2.setTitleAt(index, file);
                filepath[index] = filep;
            }
            catch(Exception e){
                ;
            }
        }
        else{
            try{
                //System.out.println("Yes!");
                //System.out.println(content);
                FileWriter fwr = new FileWriter(filepath[index]);
                BufferedWriter out = new BufferedWriter(fwr);
                out.write(content);
                out.close();
            }
            catch(Exception e){

            }
        }

    }//GEN-LAST:event_mSaveActionPerformed

    private void mCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mCopyActionPerformed
        // TODO add your handling code here:
        if(mainTabbedPane.getSelectedIndex()!=0)
            return;

        int index = jTabbedPane2.getSelectedIndex();
        tempTextPane[index].copy();
    }//GEN-LAST:event_mCopyActionPerformed

    private void mPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mPasteActionPerformed
        // TODO add your handling code here:
        if(mainTabbedPane.getSelectedIndex()!=0)
            return;
        
        int index = jTabbedPane2.getSelectedIndex();
        tempTextPane[index].paste();
    }//GEN-LAST:event_mPasteActionPerformed

    private void mSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSelectAllActionPerformed
        // TODO add your handling code here:
        if(mainTabbedPane.getSelectedIndex()!=0)
            return;
        
        int index = jTabbedPane2.getSelectedIndex();
        if(index==-1)
            return;
        tempTextPane[index].selectAll();
    }//GEN-LAST:event_mSelectAllActionPerformed

    private void mUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mUndoActionPerformed
        // TODO add your handling code here:
        if(mainTabbedPane.getSelectedIndex()!=0)
            return;
        int index = jTabbedPane2.getSelectedIndex();
        if(index==-1)
            return;
        if(undoManager.canUndo())
            undoManager.undo();

    }//GEN-LAST:event_mUndoActionPerformed

    private void mRedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mRedoActionPerformed
        // TODO add your handling code here:
        if(mainTabbedPane.getSelectedIndex()!=0)
            return;
        int index = jTabbedPane2.getSelectedIndex();
        if(index==-1)
            return;
        if(undoManager.canRedo())
            undoManager.redo();
    }//GEN-LAST:event_mRedoActionPerformed

    private void ioClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ioClearActionPerformed
        // TODO add your handling code here:
        ioPane.setText("");
    }//GEN-LAST:event_ioClearActionPerformed

    private void msgClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msgClearActionPerformed
        // TODO add your handling code here:
        msgPane.setText("");
    }//GEN-LAST:event_msgClearActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        //System.out.println("yes!");
        //ioPane.setText(ioPane.getText()+"\n"+evt.getKeyChar());
    }//GEN-LAST:event_formKeyPressed
    private void KeyPressed(java.awt.event.KeyEvent evt){
        
    }
    private void MainKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MainKeyPressed
        // TODO add your handling code here:
        //ioPane.setText(ioPane.getText()+"\n"+evt.getKeyChar());
    }//GEN-LAST:event_MainKeyPressed
    void enableRMenu(Boolean a){
        mRun.setEnabled(a);
        mStep.setEnabled(a);
        mReset.setEnabled(a);
        clearbp.setEnabled(a);
        togglebp.setEnabled(a);
    }
    void assembleAction(javax.swing.JTable mainTable, javax.swing.JTable dataTable){
        mainTabbedPane.setSelectedComponent(executePanel);
        
        javax.swing.JScrollPane tableScrollPanel;
        tableScrollPanel = new javax.swing.JScrollPane();
        mainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bkpt", "Address", "Source"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
            public Class getColumnClass(int c) {
                if(c==0)
                    return Boolean.class;
                return getValueAt(0, c).getClass();
            }
        }
        );
        tableScrollPanel.setViewportView(mainTable);
        mainTable.getColumnModel().getColumn(0).setResizable(false);
        mainTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        mainTable.getColumnModel().getColumn(1).setResizable(false);
        mainTable.getColumnModel().getColumn(1).setPreferredWidth(150);
        mainTable.getColumnModel().getColumn(2).setPreferredWidth(800);
        javax.swing.GroupLayout tempLayout = (GroupLayout) jInternalFrame1.getContentPane().getLayout();
        //tempLayout..addLayoutComponent(tableScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE,497, Short.MAX_VALUE);
        tempLayout.setHorizontalGroup(
            tempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
        );
        tempLayout.setVerticalGroup(
            tempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
        );




        javax.swing.JScrollPane dtableScrollPanel;
        dtableScrollPanel = new javax.swing.JScrollPane();
        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Address", "Value(+0)", "Value(+4)", "Value(+8)", "Value(+12)", "Value(+16)", "Value(+20)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
            public Class getColumnClass(int c) {
                return getValueAt(0, c).getClass();
            }
        }
        );
        dtableScrollPanel.setViewportView(dataTable);
        dataTable.getColumnModel().getColumn(0).setResizable(false);
        //dataTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        dataTable.getColumnModel().getColumn(1).setResizable(false);
        dataTable.getColumnModel().getColumn(2).setResizable(false);
        dataTable.getColumnModel().getColumn(3).setResizable(false);
        dataTable.getColumnModel().getColumn(4).setResizable(false);
        dataTable.getColumnModel().getColumn(5).setResizable(false);
        dataTable.getColumnModel().getColumn(6).setResizable(false);
        //mainTable.getColumnModel().getColumn(1).setPreferredWidth(150);
        //dataTable.getColumnModel().getColumn(2).setPreferredWidth(800);
        javax.swing.GroupLayout dtempLayout = (GroupLayout) jInternalFrame2.getContentPane().getLayout();
        //tempLayout..addLayoutComponent(tableScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE,497, Short.MAX_VALUE);
        dtempLayout.setHorizontalGroup(
            dtempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dtableScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
        );
        dtempLayout.setVerticalGroup(
            dtempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dtableScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
        );
        dataTable.getModel().addTableModelListener(new TableModelListener() {
        int counter =0;
        public void tableChanged(TableModelEvent e) {
            counter++;
            int row = e.getFirstRow();
            int column = e.getColumn();
            if(column==e.ALL_COLUMNS)
                return;
            TableModel model = (TableModel)e.getSource();
            String columnName = model.getColumnName(column);
            Object data = model.getValueAt(row, column);
            int mem_offset = Memory.startAddressOfDynamicData;
            int Offset = mem_offset + 24*row + 4*(column-1);
            Memory.storeWord(Offset,Integer.parseInt(data.toString()));
           // System.out.println(data);
            //Register.setRegValue(row, data);
        }
    });
    dataTable.setRowSelectionAllowed(false);
    dataTable.setSelectionBackground(Color.blue);
    }
    private void updateRegTable(){
        DefaultTableModel r_model = (DefaultTableModel)jTable1.getModel();
        for(int i=0;i<35;i++){
            //r_model.setValueAt(i, i, 1);
            r_model.setValueAt(Register.getRegValue(i),i,2);
        }
    }
    private void mAssembleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mAssembleActionPerformed
        // TODO add your handling code here:
        mainTabbedPane.setSelectedComponent(executePanel);
        jTable1.clearSelection();
        clearAllbp();
        msgPane.setText("");
        String source = new String();
        int tab_index = jTabbedPane2.getSelectedIndex();
        source = tempTextPane[tab_index].getText();
        if(once_assemble==false){
            mainTable = new javax.swing.JTable();
            dataTable = new javax.swing.JTable();
            assembleAction(mainTable, dataTable);
            once_assemble=true;
        }
        
        try{
                mipssimulator = new MIPSProgram(source);
                mipsparser_new.BMSFS.Error assembleTimeError = mipssimulator.getAssembleTimeError();
                if(!assembleTimeError.isOk()){
                    msgPane.setForeground(Color.red);
                    jTabbedPane3.setSelectedComponent(jPanel5);
                    msgPane.setText(msgPane.getText()+"\n"+assembleTimeError.getErrorMsg());
                    return;
                }
        }
        catch (Exception ex){
            //System.exit(0);
        }
        updateRegTable();
        int ins_offset = Instruction.startAddressOfInst;
        int mem_offset = Memory.startAddressOfDynamicData;
        enableRMenu(true);
        DefaultTableModel mainModel = (DefaultTableModel)mainTable.getModel();
        DefaultTableModel dataModel = (DefaultTableModel)dataTable.getModel();
        while(mainModel.getRowCount()>0){
            mainModel.removeRow(0);
        }
        while(dataModel.getRowCount()>0){
            dataModel.removeRow(0);
        }
        //mipssimulator.printDataAndTextSections();

        ArrayList<String> sourceofTextSection = new ArrayList<String>();
        sourceofTextSection = mipssimulator.getsourceOfTextSection();

        for(int i=0;i<sourceofTextSection.size();i++){
            Object []trow = {false, ins_offset + i," "+sourceofTextSection.get(i).toString()};
            mainModel.addRow(trow);
        }
        for(int i=0;i<15;i++){
            Integer[] value= new Integer[6];
            Integer printableAddr=mem_offset+ 24*i ;
            for(int j=0;j<6;j++){
                int addr=printableAddr+4*j ;
                value[j] = Memory.readWord(addr);
            }
            dataModel.addRow(new Object[]{printableAddr.toString(),value[0].toString(),value[1].toString(),value[2].toString(),value[3].toString(),value[4].toString(),value[5].toString()});
        }
    }//GEN-LAST:event_mAssembleActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        mainTabbedPane.setSelectedComponent(helpPanel);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        javax.swing.JOptionPane jOptionPane1;
        jOptionPane1 = new javax.swing.JOptionPane();
        String message = Projectname + " Version " + version + " Build 100\nDesigned by -\n\tLakshya Jain and Rishikesh Dwivedi\n\n"+Projectname+" is a Mips Assembler and\n"+"Runtime Simulator.";
        jOptionPane1.showMessageDialog(null, message);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void mainTabbedPaneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mainTabbedPaneFocusGained
        // TODO add your handling code here:
        //jTabbedPane2.requestFocus();
    }//GEN-LAST:event_mainTabbedPaneFocusGained

    private void editorPanelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_editorPanelFocusGained
        // TODO add your handling code here:
        jTabbedPane2.requestFocus();
    }//GEN-LAST:event_editorPanelFocusGained

    private void mRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mRunActionPerformed
        // TODO add your handling code here:
        DefaultTableModel mainModel = (DefaultTableModel)mainTable.getModel();
        int index=-1;
        while(true){
             	int currentPC=Register.getPC();
		int startPC=Instruction.startAddressOfInst;
		int n_index=(currentPC-startPC)/4;
            mipsparser_new.BMSFS.Error err =  mipssimulator.runCurrentInstruction();
            msgPane.setForeground(Color.red);
            if(!err.isOk()){
                jTabbedPane3.setSelectedComponent(jPanel5);
                msgPane.setText(msgPane.getText()+"\n"+err.getErrorMsg());
            }else if(err.isWarning()){
                jTabbedPane3.setSelectedComponent(jPanel5);
                msgPane.setText(msgPane.getText()+"\n"+err.getErrorMsg());
            }


            if(n_index==index)
                break;
            index=n_index;
            //System.out.println(index);
            if(index>=mainModel.getRowCount())
                 break;
            if(mainModel.getValueAt(index, 0).equals(true))
                break;
        }

        int mem_offset = Memory.startAddressOfDynamicData;
        DefaultTableModel dataModel = (DefaultTableModel)dataTable.getModel();
        //ListSelectionModel selectDataTable = dataTable.getSelectionModel();
        //selectDataTable.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        for(int i=0;i<15;i++){
            int[] value= new int[6];
            int printableAddr=mem_offset+ 24*i ;
            for(int j=0;j<6;j++){
                int addr=printableAddr+4*j ;
                value[j] = Memory.readWord(addr);
                int temp = Integer.parseInt(dataModel.getValueAt(i, j+1).toString());
                dataModel.setValueAt(value[j], i, j+1);
            }
        }
        ListSelectionModel selectionModel = mainTable.getSelectionModel();
        selectionModel.setSelectionInterval(index, index);
        DefaultTableModel rmodel = (DefaultTableModel)jTable1.getModel();
        int[] tempReg = new int[35];
        for(int i=0;i<35;i++){
            tempReg[i] = (Integer)rmodel.getValueAt(i, 2);
        }
        ListSelectionModel regModel = jTable1.getSelectionModel();
        regModel.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        Boolean first = false;
        for(int i=0;i<35;i++){
            rmodel.setValueAt(Register.getRegValue(i), i, 2);
            if(tempReg[i]!=Register.getRegValue(i)){
                if(first==false){
                    regModel.setSelectionInterval(i, i);
                    first = true;
                }else{
                    regModel.addSelectionInterval(i, i);
                }
            }
        }
    }//GEN-LAST:event_mRunActionPerformed

    private void mStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mStepActionPerformed
        // TODO add your handling code here:
        	int currentPC=Register.getPC();
		int startPC=Instruction.startAddressOfInst;
		int index=(currentPC-startPC)/4;
        mipsparser_new.BMSFS.Error err = mipssimulator.runCurrentInstruction();
        int new_index = (Register.getPC()-Instruction.startAddressOfInst)/4;

        msgPane.setForeground(Color.red);
            if(!err.isOk()){
                jTabbedPane3.setSelectedComponent(jPanel5);
                msgPane.setText(msgPane.getText()+"\n"+err.getErrorMsg());
                
            }else if(err.isWarning()){
                jTabbedPane3.setSelectedComponent(jPanel5);
                msgPane.setText(msgPane.getText()+"\n"+err.getErrorMsg());
            }
            
        //msgPane.setForeground(Color.green);

            //msgPane.setText("HAHAHHA");
        //System.out.println(index);
        int mem_offset = Memory.startAddressOfDynamicData;
        DefaultTableModel dataModel = (DefaultTableModel)dataTable.getModel();
        for(int i=0;i<15;i++){
            int[] value= new int[6];
            int printableAddr=mem_offset+ 24*i ;
            for(int j=0;j<6;j++){
                int addr=printableAddr+4*j ;
                value[j] = Memory.readWord(addr);
            //    System.out.println("\n\nadd = "+addr+" value = "+value[j]);
                dataModel.setValueAt(value[j], i, j+1);
            }
            //model2.addRow(new Object[]{printableAddr,value[0],value[1],value[2],value[3],value[4]});
        }
        ListSelectionModel selectionModel = mainTable.getSelectionModel();
        selectionModel.setSelectionInterval(index, index);
        DefaultTableModel rmodel = (DefaultTableModel)jTable1.getModel();
        int[] tempReg = new int[35];
        for(int i=0;i<35;i++){
            tempReg[i] = (Integer)rmodel.getValueAt(i, 2);
        }
        ListSelectionModel regModel = jTable1.getSelectionModel();
        regModel.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        Boolean first = false;
        for(int i=0;i<35;i++){
            rmodel.setValueAt(Register.getRegValue(i), i, 2);
            if(tempReg[i]!=Register.getRegValue(i)){
                if(first==false){
                    regModel.setSelectionInterval(i, i);
                    first = true;
                }else{
                    regModel.addSelectionInterval(i, i);
                }
            }
        }
    }//GEN-LAST:event_mStepActionPerformed

    private void mResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mResetActionPerformed
        // TODO add your handling code here:
        mainTabbedPane.setSelectedComponent(executePanel);
        msgPane.setText("");
        jTable1.clearSelection();
        clearAllbp();
        String source = new String();
        int tab_index = jTabbedPane2.getSelectedIndex();
        source = tempTextPane[tab_index].getText();
        if(once_assemble==false){
            mainTable = new javax.swing.JTable();
            dataTable = new javax.swing.JTable();
            assembleAction(mainTable, dataTable);
            once_assemble=true;
        }

        try{
                mipssimulator = new MIPSProgram(source);
        }
        catch (Exception ex){
            //System.exit(0);
        }
        updateRegTable();
        int ins_offset = Instruction.startAddressOfInst;
        int mem_offset = Memory.startAddressOfDynamicData;
        enableRMenu(true);
        DefaultTableModel mainModel = (DefaultTableModel)mainTable.getModel();
        DefaultTableModel dataModel = (DefaultTableModel)dataTable.getModel();
        while(mainModel.getRowCount()>0){
            mainModel.removeRow(0);
        }
        while(dataModel.getRowCount()>0){
            dataModel.removeRow(0);
        }
        //mipssimulator.printDataAndTextSections();

        ArrayList<String> sourceofTextSection = new ArrayList<String>();
        sourceofTextSection = mipssimulator.getsourceOfTextSection();

        for(int i=0;i<sourceofTextSection.size();i++){
            Object []trow = {false, ins_offset + i," "+sourceofTextSection.get(i).toString()};
            mainModel.addRow(trow);
        }
        for(int i=0;i<15;i++){
            Integer[] value= new Integer[6];
            Integer printableAddr=mem_offset+ 24*i ;
            for(int j=0;j<6;j++){
                int addr=printableAddr+4*j ;
                value[j] = Memory.readWord(addr);
            }
            dataModel.addRow(new Object[]{printableAddr.toString(),value[0].toString(),value[1].toString(),value[2].toString(),value[3].toString(),value[4].toString(),value[5].toString()});
        }

    }//GEN-LAST:event_mResetActionPerformed
    void clearAllbp(){
        if(once_assemble==false)
            return;
        DefaultTableModel mainModel = (DefaultTableModel)mainTable.getModel();
        int rows = mainModel.getRowCount();
        for(int i=0;i<rows;i++){
            mainModel.setValueAt(false, i, 0);
        }
    }
    private void clearbpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbpActionPerformed
        // TODO add your handling code here:
        clearAllbp();
    }//GEN-LAST:event_clearbpActionPerformed

    private void togglebpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_togglebpActionPerformed
        // TODO add your handling code here:
        DefaultTableModel mainModel = (DefaultTableModel)mainTable.getModel();
        int rows = mainModel.getRowCount();
        for(int i=0;i<rows;i++){
            if(mainModel.getValueAt(i, 0).equals(true)){
                mainModel.setValueAt(false, i, 0);
            }
            else
                mainModel.setValueAt(true, i, 0);
        }
    }//GEN-LAST:event_togglebpActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Exit;
    private javax.swing.JPanel Main;
    private javax.swing.JMenuItem clearbp;
    private javax.swing.JPanel editorPanel;
    private javax.swing.JPanel executePanel;
    private javax.swing.JTextPane helpPane;
    private javax.swing.JPanel helpPanel;
    private javax.swing.JButton ioClear;
    private javax.swing.JTextPane ioPane;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenuItem mAssemble;
    private javax.swing.JMenuItem mClose;
    private javax.swing.JMenuItem mCloseAll;
    private javax.swing.JMenuItem mCopy;
    private javax.swing.JMenuItem mCut;
    private javax.swing.JMenuItem mNew;
    private javax.swing.JMenuItem mOpen;
    private javax.swing.JMenuItem mPaste;
    private javax.swing.JMenuItem mRedo;
    private javax.swing.JMenuItem mReset;
    private javax.swing.JMenuItem mRun;
    private javax.swing.JMenuItem mSave;
    private javax.swing.JMenuItem mSaveAs;
    private javax.swing.JMenuItem mSelectAll;
    private javax.swing.JMenuItem mStep;
    private javax.swing.JMenuItem mUndo;
    private javax.swing.JTabbedPane mainTabbedPane;
    private javax.swing.JButton msgClear;
    private javax.swing.JTextPane msgPane;
    private javax.swing.JMenuItem togglebp;
    // End of variables declaration//GEN-END:variables

}
